# Generated by Django 2.0.2 on 2019-01-07 23:30

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Contour',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75, verbose_name='Название контура')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание контура')),
                ('order_by', models.IntegerField(default=999, verbose_name='Порядок отображения')),
                ('last_upd_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Кем изменено')),
            ],
            options={
                'verbose_name': 'Контур',
                'verbose_name_plural': 'Контуры',
            },
        ),
        migrations.CreateModel(
            name='CSCU',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locked_status', models.BooleanField(default=False, verbose_name='Выполняется другим пользователем')),
                ('start_time', models.DateTimeField(default=datetime.datetime(2019, 1, 8, 2, 30, 57, 338921), verbose_name='Время начала выполнения')),
                ('end_time', models.DateTimeField(null=True, verbose_name='Время завершения выполнения')),
                ('contour', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.Contour', verbose_name='Контур')),
            ],
        ),
        migrations.CreateModel(
            name='MenuItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.CharField(max_length=20, verbose_name='Название страницы')),
                ('title', models.CharField(max_length=40, verbose_name='Title ссылки')),
                ('item_id', models.CharField(max_length=10, verbose_name='Id на странице')),
                ('order_number', models.IntegerField(verbose_name='Порядок')),
                ('link', models.CharField(blank=True, max_length=40, null=True, verbose_name='Ссылка на страницу')),
                ('is_sub', models.BooleanField(verbose_name='Подкатегория?')),
                ('is_public', models.BooleanField(default=True, verbose_name='Паблик?')),
                ('last_upd_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Кем изменено')),
            ],
            options={
                'verbose_name': 'Меню',
                'verbose_name_plural': 'Меню',
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75, verbose_name='Название полномочия')),
                ('contour', models.ManyToManyField(blank=True, to='main.Contour', verbose_name='Контуры')),
                ('last_upd_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Кем изменено')),
            ],
            options={
                'verbose_name': 'Полномочие',
                'verbose_name_plural': 'Полномочия',
            },
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Название машины')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP адрес машины')),
                ('ssh_port', models.IntegerField(verbose_name='SSH порт')),
                ('user', models.CharField(max_length=30, verbose_name='Имя пользователя')),
                ('password', models.CharField(max_length=30, verbose_name='Пароль для подключения')),
                ('contour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='severs', to='main.Contour', verbose_name='Контур')),
                ('last_upd_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Кем изменено')),
            ],
            options={
                'verbose_name': 'Сервер',
                'verbose_name_plural': 'Сервера',
            },
        ),
        migrations.CreateModel(
            name='ServerCommand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, verbose_name='Название команды')),
                ('command', models.TextField(help_text='\n    Введите команду для выполнения на сервере<br>\n    Вы можете ввести custom_command для того, чтобы пользователь сам ввёл команду', max_length=2000, verbose_name='Команда для выполнения')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание команды')),
                ('average_execution_time', models.FloatField(default=1.0, verbose_name='Среднее время выполнения команды')),
                ('lock_enable', models.BooleanField(default=False, verbose_name='Запретить выполнять параллельно')),
                ('last_upd_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Кем изменено')),
                ('server', models.ManyToManyField(related_name='commands', to='main.Server', verbose_name='Сервер')),
            ],
            options={
                'verbose_name': 'Команда',
                'verbose_name_plural': 'Команды',
            },
        ),
        migrations.AddField(
            model_name='permission',
            name='server',
            field=models.ManyToManyField(blank=True, to='main.Server', verbose_name='Сервера'),
        ),
        migrations.AddField(
            model_name='permission',
            name='servercommand',
            field=models.ManyToManyField(blank=True, to='main.ServerCommand', verbose_name='Команды'),
        ),
        migrations.AddField(
            model_name='permission',
            name='user',
            field=models.ManyToManyField(related_name='user_permission', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddField(
            model_name='cscu',
            name='server',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.Server', verbose_name='Сервер'),
        ),
        migrations.AddField(
            model_name='cscu',
            name='servercommand',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.ServerCommand', verbose_name='Команда'),
        ),
        migrations.AddField(
            model_name='cscu',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AlterUniqueTogether(
            name='server',
            unique_together={('ip_address', 'ssh_port')},
        ),
    ]
